<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/fonte.css">
    <title>Histórico</title>
    
    <style>
        .custom-title {
            color: #F20505; 
        }

        .btn-red {
            background-color: #ff0000; /* Vermelho padrão */
            border-color: #ff0000; /* Bordas no mesmo tom do fundo */
        }

        .btn-red:hover {
            background-color: #f97e7e; /* Vermelho mais claro no hover */
            border-color: #f97e7e; /* Bordas no mesmo tom do hover */
        }

        
        /* Estilos gerais da tabela */
        table {
            width: 100%;
            border-collapse: collapse; /* Remove espaços entre as bordas das células */
        }
        th, td {
            border: 2px solid #ddd; /* Borda cinza claro para cada célula */
            padding: 8px; /* Espaçamento interno nas células */
            text-align: left; /* Alinhamento do texto */
        }
        th {
            background-color: #f2f2f2; /* Cor de fundo para cabeçalho */
            font-weight: bold; /* Texto em negrito para o cabeçalho */
        }
        tr:nth-child(even) {
            background-color: #f9f9f9; /* Cor de fundo alternada para linhas pares */
        }
    </style>
</head>
<body> 
    <header>
       <%- include ('navbar') %> 
    </header>

    <main class="container mt-5">
        <div class="text-center">
            <h1 class="display-2 custom-title">Histórico de Ocorrências</h1>
        </div>

        <form action="/historico" method="get">
            <div class="row mt-3">
                <div class="col-md-3">
                    <label for="categ" class="form-label">Categorias:</label>
                    <select id="categ" name="categ" class="form-select">
                        <option value="todos">Todos</option>
                        <option value="trem">Trem</option>
                        <option value="linha">Linha</option>
                        <option value="estacao">Estação</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="status" class="form-label">Status:</label>
                    <select id="status" name="status" class="form-select">
                        <option value="todos">Todos</option>
                        <option value="aberto">Em aberto</option>
                        <option value="resolvido">Resolvido</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="data_inicio" class="form-label">Data de início:</label>
                    <input type="date" id="data_inicio" name="data_inicio" class="form-control">
                </div>
                <div class="col-md-3">
                    <label for="data_final" class="form-label">Data final:</label>
                    <input type="date" id="data_final" name="data_final" class="form-control">
                </div>
            </div>
        </form>

        <div class="mt-4">
            <div style="margin: 20px; width: calc(100% - 40px);"> 
                <table id="tabela" border="2" style="width: 100%; margin: auto;"> 
                </table>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Define os cabeçalhos da tabela
        var headers = [
            { key: 'data', name: 'Data' },
            { key: 'horario', name: 'Horário' },
            { key: 'linha', name: 'Linha' },
            { key: 'categoria', name: 'Categoria' },
            { key:'tag', name:'Tipo' },
            { key: 'abrir', name: 'Abrir' }
            
        ];

        // Função para popular a tabela com dados
        function populateTable(c, items) {
            var thead = c.createTHead();
            var headerRow = thead.insertRow();

            // Define cabeçalhos
            headers.forEach(function(header) {
                var cell = headerRow.insertCell();
                cell.textContent = header.name;
                cell.style.fontWeight = 'bold'; // Define cabeçalhos em negrito
            });

            // Cria corpo da tabela
            var tbody = document.createElement('tbody');
            c.appendChild(tbody);

            // Insere dados no corpo
            items.forEach(function(item) {
                var row = tbody.insertRow();
                headers.forEach(function(header) {
                    var cell = row.insertCell();
                    if (header.key === 'abrir') {
                        var button = document.createElement('button');
                        button.textContent = 'Abrir';
                        button.className = 'btn btn-primary';
                        cell.appendChild(button);
                    } else {
                    cell.textContent = item[header.key] || '';
                    }
                });
            });
        }

        // Função para buscar ocorrências do JSON
        function fetchOccurrences() {
            fetch('/ocorrencias')
                .then(response => response.json())
                .then(data => {
                    var tabela = document.getElementById("tabela");
                    var ocorrencias = data.ocorrencias.map(ocorrencia => ({
                        data: ocorrencia.data,
                        horario: ocorrencia.horario,
                        linha: ocorrencia.linha,
                        categoria: ocorrencia.categoria,
                        tag: ocorrencia.tag,
                         // Supondo que 'descricao' seja a 'categoria'
                        abrir: ''
                    }));
                    populateTable(tabela, ocorrencias);
                    addButtonEventListeners(); // Adiciona os eventos aos botões após popular a tabela
                })
                .catch(error => console.error('Erro ao carregar as ocorrências:', error));
        }

        // Carregar ocorrências quando a página é carregada
        document.addEventListener('DOMContentLoaded', fetchOccurrences);

        
        // Função para exibir os detalhes da ocorrência no modal
        function showDetails(item) {
            document.getElementById('detalhesData').textContent = item.data;
            document.getElementById('detalhesHorario').textContent = item.horario;
            document.getElementById('detalhesLinha').textContent = item.linha;
            document.getElementById('detalhesDescricao').textContent = item.descricao;
            

            var detalhesOcorrenciaModal = new bootstrap.Modal(document.getElementById('detalhesOcorrenciaModal'));
            detalhesOcorrenciaModal.show();
        }
        
         // Adiciona evento de clique aos botões "Abrir"
    function addButtonEventListeners() {
        document.querySelectorAll('button.btn-primary').forEach(function(button) {
            button.addEventListener('click', function() {
                var row = button.closest('tr');
                var item = {
                    data: row.querySelector('td:nth-child(1)').textContent,
                    horario: row.querySelector('td:nth-child(2)').textContent,
                    linha: row.querySelector('td:nth-child(3)').textContent,
                    categoria: row.querySelector('td:nth-child(4)').textContent,
                    
                };
                showDetails(item);
            });
        });
    }


    </script>

    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f8f9fa;
            font-weight: bold; 
        }
    </style>

    
    
     <footer>
        <%- include ('footer') %> 
   </footer>

   <!-- Modal para exibir detalhes da ocorrência -->
<div class="modal fade" id="detalhesOcorrenciaModal" tabindex="-1" aria-labelledby="detalhesOcorrenciaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detalhesOcorrenciaModalLabel">Detalhes da Ocorrência</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Detalhes da ocorrência serão inseridos aqui -->
                <p><strong>Data:</strong> <span id="detalhesData"></span></p>
                <p><strong>Horário:</strong> <span id="detalhesHorario"></span></p>
                <p><strong>Linha:</strong> <span id="detalhesLinha"></span></p>
                <p><strong>Categoria:</strong> <span id="detalhesCategoria"></span></p>
                
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

</body>
</html>
